CREATE DATABASE blog;
DROP DATABASE BLOG;
use blog;

CREATE TABLE posts(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    body TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO posts (title, body) VALUES 
('Dicas para começar a programar em PHP', 'Se você está começando a programar em PHP, aqui vão algumas dicas úteis para começar sua jornada. Primeiro, certifique-se de entender os conceitos básicos da linguagem, como variáveis, estruturas de controle e funções. Em seguida, pratique escrevendo pequenos scripts e experimentando com diferentes recursos do PHP. Além disso, familiarize-se com os frameworks e bibliotecas populares do PHP, como Laravel e Symfony, que podem facilitar o desenvolvimento de aplicativos web. Por fim, não se esqueça de consultar a documentação oficial do PHP sempre que tiver dúvidas ou precisar de orientação.'),
('Introdução ao desenvolvimento web com PHP', 'O PHP é uma das linguagens de programação mais populares para o desenvolvimento web. Se você está interessado em aprender como construir sites dinâmicos e aplicativos web, o PHP é uma ótima escolha. Comece aprendendo os fundamentos da linguagem, como variáveis, arrays e loops. Em seguida, experimente construir alguns projetos simples, como um formulário de contato ou um sistema de login. À medida que você ganha confiança, explore conceitos mais avançados, como programação orientada a objetos e acesso a banco de dados. Com prática e perseverança, você estará construindo aplicativos web incríveis em pouco tempo!'),
('Como configurar um ambiente de desenvolvimento PHP', 'Configurar um ambiente de desenvolvimento PHP pode parecer assustador no início, mas na verdade é bastante simples. Primeiro, você precisará instalar um servidor web, como o Apache ou o Nginx. Em seguida, instale o PHP e o MySQL para poder executar scripts PHP e armazenar dados em um banco de dados. Você também pode considerar usar um ambiente de desenvolvimento integrado (IDE), como o Visual Studio Code ou o PHPStorm, para facilitar a escrita de código. Por fim, não se esqueça de configurar seu servidor web para que ele possa executar scripts PHP corretamente.'),
('Principais frameworks PHP para desenvolvimento web', 'Existem muitos frameworks PHP disponíveis para facilitar o desenvolvimento de aplicativos web. Alguns dos mais populares incluem Laravel, Symfony, CodeIgniter e Yii. Cada framework tem suas próprias vantagens e características únicas, por isso é importante escolher o que melhor se adapta às suas necessidades e preferências. Laravel, por exemplo, é conhecido por sua elegância e facilidade de uso, enquanto Symfony é valorizado por sua flexibilidade e extensibilidade. Independentemente do framework que você escolher, todos eles podem ajudá-lo a construir aplicativos web robustos e escaláveis.'),
('Segurança no desenvolvimento de aplicações PHP', 'A segurança é uma preocupação fundamental ao desenvolver aplicativos web em PHP. Existem várias práticas recomendadas que você pode seguir para proteger seus aplicativos contra vulnerabilidades e ataques. Em primeiro lugar, certifique-se de validar e filtrar todas as entradas do usuário para evitar injeção de SQL e ataques de script entre sites (XSS). Além disso, sempre use funções de hash seguras, como bcrypt, para armazenar senhas com segurança. Por fim, mantenha seu software PHP atualizado e aplique patches de segurança regularmente para proteger contra vulnerabilidades conhecidas.'),
('Como construir uma API RESTful com PHP', 'APIs RESTful são uma maneira popular de criar serviços web que podem ser consumidos por aplicativos móveis, sites e outros serviços web. Se você deseja construir uma API RESTful em PHP, há algumas etapas que você pode seguir. Primeiro, defina os endpoints da sua API e os métodos HTTP que eles suportam (por exemplo, GET, POST, PUT, DELETE). Em seguida, escreva funções PHP para lidar com cada endpoint e implementar a lógica de negócios necessária. Finalmente, teste sua API cuidadosamente para garantir que ela esteja funcionando corretamente e cumprindo todos os requisitos.'),
('Melhores práticas de performance em PHP', 'Para garantir que seus aplicativos PHP sejam rápidos e eficientes, é importante seguir algumas práticas recomendadas de desempenho. Primeiro, minimize o número de consultas ao banco de dados e use caches sempre que possível para reduzir a sobrecarga do servidor. Além disso, otimize o código PHP, removendo código desnecessário e evitando loops e operações custosas sempre que possível. Também é importante usar uma versão recente do PHP e manter seu software atualizado para se beneficiar das últimas melhorias de desempenho.'),
('Debugging de aplicações PHP', 'O debugging é uma parte importante do desenvolvimento de aplicações PHP. Felizmente, existem várias ferramentas e técnicas que você pode usar para identificar e corrigir problemas em seu código. Uma maneira simples de começar é usar a função var_dump() para imprimir valores de variáveis e depurar o fluxo de controle do seu programa. Além disso, você pode usar um depurador PHP, como Xdebug, para depurar scripts PHP de forma mais avançada, definindo pontos de interrupção e inspecionando o estado do programa em tempo de execução.'),
('Autenticação de usuários em PHP', 'A autenticação de usuários é uma parte fundamental de muitos aplicativos web em PHP. Existem várias maneiras de implementar a autenticação de usuários em PHP, desde a criação de um sistema de login simples até a integração com serviços de autenticação de terceiros, como OAuth. Se você está construindo um sistema de login do zero, certifique-se de usar funções de hash seguras, como bcrypt, para armazenar senhas com segurança e proteger contra ataques de força bruta. Além disso, considere usar tokens de sessão ou cookies seguros para manter os usuários autenticados entre as solicitações.'),
('Como enviar e-mails com PHP', 'Enviar e-mails com PHP é uma tarefa comum em muitos aplicativos web. Felizmente, o PHP facilita o envio de e-mails usando a função mail() ou bibliotecas de terceiros, como PHPMailer. Para enviar um e-mail com PHP, você precisa configurar um servidor de e-mail SMTP e usar as configurações do servidor no seu código. Além disso, certifique-se de fornecer uma mensagem clara e concisa para os destinatários e evitar o envio de spam ou e-mails não solicitados.') ;

SELECT DATE_FORMAT(created_at, '%Y') AS ano,
       DATE_FORMAT(created_at, '%m') AS mes,
       DATE_FORMAT(created_at, '%d') AS dia
FROM posts;
